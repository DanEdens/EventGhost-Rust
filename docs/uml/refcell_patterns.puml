@startuml RefCell Borrowing Patterns

title RefCell Borrowing Patterns in EventGhost-Rust

' Classes that demonstrate RefCell patterns
class Component {
  -config: Rc<RefCell<Config>>
  -window: Rc<RefCell<Window>>
  +get_config(): Rc<RefCell<Config>>
  +get_window(): Rc<RefCell<Window>>
}

class Config {
  -items: Vec<ConfigItem>
  +load_from_file(): Result<(), Error>
  +save_to_file(): Result<(), Error>
}

class Dialog {
  +run_with_data(data: Rc<RefCell<Config>>): Result<(), Error>
}

note right of Component
  RefCell patterns help manage shared mutable state
  between GTK components safely
end note

note right of Component::get_config
  Clone + Borrow Pattern:
  
  // Clone the Rc first
  let config = self.config.clone();
  // Then borrow
  let config_ref = config.borrow();
  
  // Use config_ref safely
end note

note right of Component::get_window
  Window Pattern:
  
  // For GTK widgets
  let window = self.window.clone();
  let window_ref = window.borrow();
  
  // Use window_ref
  window_ref.show();
end note

note right of Dialog
  Callback Pattern:
  
  // For GTK callbacks
  let params = params.clone();
  
  button.connect_clicked(move |_| {
    // Safe to use params inside callback
    let mut params_ref = params.borrow_mut();
    // Modify params
  });
end note

' Sequence diagram
actor User
participant Component
participant "Rc<RefCell<Config>>" as RCConfig
participant Closure
participant Dialog

User -> Component: call method
activate Component

Component -> RCConfig: clone()
RCConfig --> Component: Rc<RefCell<Config>> clone

Component -> RCConfig: borrow()
RCConfig --> Component: Ref<Config>

Component -> Dialog: show(closure)
activate Dialog

Dialog -> Closure: invoke
activate Closure

Closure -> RCConfig: clone()
RCConfig --> Closure: Rc<RefCell<Config>> clone

Closure -> RCConfig: borrow_mut()
RCConfig --> Closure: RefMut<Config>

Closure -> Closure: modify config
Closure --> Dialog: return
deactivate Closure

Dialog --> Component: dialog closed
deactivate Dialog

Component --> User: method returns
deactivate Component

note over Component, Dialog
  This pattern allows RefCell borrowing in callbacks
  without causing compile errors due to complex lifetimes
end note

@enduml 